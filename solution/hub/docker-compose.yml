version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hub_postgres
    environment:
      POSTGRES_DB: WebApiDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - hub_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # .NET API Application
  hub_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hub_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=WebApiDb;Username=postgres;Password=your_password
      - Jwt__SecretKey=your-super-secret-jwt-key-here-must-be-at-least-32-characters-long-for-security
      - Jwt__Issuer=HubApi
      - Jwt__Audience=HubApiUsers
      - Jwt__ExpirationMinutes=60
      - Database__AutoMigrate=true
      - Database__EnsureCreated=true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hub_network
    restart: unless-stopped
    volumes:
      - ./files:/app/files
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  hub_network:
    driver: bridge